spring:
  application:
    name: shopify-data-api

  # Database Configuration (Railway PostgreSQL)
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/shopify_data}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  # Flyway Configuration for Database Migrations
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true

# Server Configuration
server:
  port: ${PORT:8080}
  error:
    include-message: always
    include-binding-errors: always

# Shopify Configuration
shopify:
  # Your Shopify store URL (e.g., mystore.myshopify.com)
  shop-url: ${SHOPIFY_SHOP_URL}
  # Your Shopify Admin API Access Token
  access-token: ${SHOPIFY_ACCESS_TOKEN}
  # API Version (update quarterly as Shopify releases new versions)
  api-version: ${SHOPIFY_API_VERSION:2025-01}
  # GraphQL endpoint will be: https://{shop-url}/admin/api/{api-version}/graphql.json

  # Rate Limiting Configuration
  rate-limit:
    # Max points per second (adjust based on your Shopify plan)
    # Basic: 100, Advanced: 200, Plus: 1000, Enterprise: 2000
    max-points-per-second: ${SHOPIFY_MAX_POINTS:100}
    # Retry configuration
    max-retries: ${SHOPIFY_MAX_RETRIES:3}
    initial-backoff-ms: ${SHOPIFY_INITIAL_BACKOFF:1000}

# AI Chat Configuration
anthropic:
  api:
    key: ${ANTHROPIC_API_KEY:}
    version: ${ANTHROPIC_API_VERSION:2023-06-01}
  model: ${ANTHROPIC_MODEL:claude-3-5-sonnet-20241022}
  max-tokens: ${ANTHROPIC_MAX_TOKENS:1024}
  temperature: ${ANTHROPIC_TEMPERATURE:0.7}
  system-prompt-file: ${ANTHROPIC_SYSTEM_PROMPT_FILE:classpath:prompts/system-prompt.txt}

# Chatbot Configuration
chatbot:
  # Store Identity
  store:
    name: ${CHATBOT_STORE_NAME:Hearn's Hobbies}
    description: ${CHATBOT_STORE_DESCRIPTION:An online hobby store specializing in model kits and hobby supplies}
    categories: ${CHATBOT_STORE_CATEGORIES:model kits, hobby paints, tools, crafting supplies, model accessories}

  # Behavior Rules
  behavior:
    scope-instructions: ${CHATBOT_SCOPE_INSTRUCTIONS:We specialize in hobby and model building supplies including Gundam model kits, scale models, hobby paints, tools, and accessories for model enthusiasts.}
    out-of-scope-response: ${CHATBOT_OUT_OF_SCOPE:I specialize in hobby supplies and model kits. While I don't have information about that specific item, I'd be happy to help you find model kits, paints, or hobby tools from our catalog!}
    require-search: ${CHATBOT_REQUIRE_SEARCH:true}

  # Tool Configuration
  tools:
    enable-product-search: ${CHATBOT_ENABLE_SEARCH:true}
    max-search-results: ${CHATBOT_MAX_RESULTS:10}

  # Response Style
  response:
    tone: ${CHATBOT_TONE:friendly}
    include-cart-links: ${CHATBOT_INCLUDE_CART_LINKS:true}
    show-prices: ${CHATBOT_SHOW_PRICES:true}
    show-skus: ${CHATBOT_SHOW_SKUS:true}

  # Advanced
  custom-instructions: ${CHATBOT_CUSTOM_INSTRUCTIONS:}

# CRS MCP Configuration (In-Store ERP System)
crs:
  mcp:
    # MCP Server URL
    url: ${CRS_MCP_URL:https://web-production-2534.up.railway.app/mcp}
    # Enable/disable CRS integration
    enabled: ${CRS_MCP_ENABLED:true}
    # Timeout for MCP requests (milliseconds)
    timeout-ms: ${CRS_MCP_TIMEOUT:10000}

# Logging Configuration
logging:
  level:
    root: INFO
    com.shopify.api: DEBUG
    org.springframework.web: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
